
var testCase = require('nodeunit').testCase;
var ImapParser = require('../lib/imap-parser').ImapParser;
var p = new ImapParser(ImapParser.RESPONSE);

function runner(str) {
  var b = new Buffer(str);

  return function() {
    p.execute( b );
    if (!p.isDone()) {
        throw new Error("Command Incomplete");
    }
  }
}

module.exports = testCase({
  setUp: function(cb) {
    p.reinitialize(ImapParser.RESPONSE);
    console.log('----------------------');
    cb();
  },
  mailbox_flags_one: function(test) {
    test.doesNotThrow(runner('* FLAGS ()\r\n'));
    test.done();
  },
  mailbox_flags_two: function(test) {
    test.doesNotThrow(runner("* FLAGS (\\Noinferiors \\Noselect)\r\n"));
    test.done();
  },
  mailbox_list: function(test) {
    test.doesNotThrow(runner('* LIST () "A" "haha"\r\n'));
    test.done();
  },
  mailbox_list_two: function(test) {
    test.doesNotThrow(runner('* LIST () NIL "hahah"\r\n'));
    test.done();
  },
  mailbox_lsub: function(test) {
    test.doesNotThrow(runner('* LSUB (\\AHAHA) "B" "OMG"\r\n'));
    test.done();
  },
  mailbox_search: function(test) {
    test.doesNotThrow(runner("* SEARCH 12 43\r\n"));
    test.done();
  },
  mailbox_status: function(test) {
    test.doesNotThrow(runner("* STATUS INBOX (MESSAGES 12 RECENT 40 UNSEEN 4)\r\n"));
    test.done();
  },
  /*
  text: function(test) {
    test.doesNotThrow(runner("+ this is some text!\r\n"));
    test.done();
  },

  extra_eq: function(test) {
    test.doesNotThrow(runner("+ aef4====\r\n"));
    test.done();
  },
*/
});
